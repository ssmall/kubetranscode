# Copyright 2020 Spencer Small
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Pull request workflow

name: pull-request

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  license:
    runs-on: ubuntu-latest
    name: License Check
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      
      - name: Install addlicense
        run: go get -u github.com/google/addlicense
      
      - name: Check licenses
        run: addlicense -check .
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_GO: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  golint:
    name: Lint Go Code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      
      - name: Install golint
        run: go get -u golang.org/x/lint/golint
      
      - name: Run golint
        run: golint -set_exit_status ./...
  go-build:
    runs-on: ubuntu-latest
    name: Go Build
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15

      - name: Build Go source
        run: go build -v -o /tmp/ ./... 

  go-vet:
    runs-on: ubuntu-latest
    name: Go Vet
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
    
      - run: go vet ./...

  go-test:
    runs-on: ubuntu-latest
    name: Go Test
    needs: [go-build]
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      
      - name: Unit Tests w/ Coverage
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      
      - name: Upload Coverage Report
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)
  
